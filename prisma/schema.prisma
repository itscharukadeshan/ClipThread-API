datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
generator client {
  provider = "prisma-client-js"
  output   = "./client/"
}
model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String?
  url       String
  followers Int?
  creatorId Int
  collections Thread[]

  twitchAuth TwitchAuth? 
  youtubeAuth YouTubeAuth?
}

model TwitchAuth {
  id Int @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique
  accessToken  String @db.VarChar(500)
  refreshToken String @db.VarChar(500)
  expiryTime   DateTime
}

model YouTubeAuth {
  id Int @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int @unique
  accessToken  String @db.VarChar(500) 
  refreshToken String @db.VarChar(500)
  expiryTime   DateTime
}

model Thread {
  id        Int     @default(autoincrement()) @id
  title     String
  url   String
  description String? 
  published Boolean @default(false)
  publishedTime DateTime @default(now())
  author    User?   @relation(fields: [authorId], references: [id])
  authorId  Int?
}

model Clip {
  id Int @id @default(autoincrement())  
  description String?
  url String
  tags Tag[]
}

model Tag {
  id        Int     @id @default(autoincrement())
  name      String  
  topic     Topic?   @relation(fields: [topicId], references: [id])
  topicId   Int? 
  clips   Clip[]
}

model Topic {
  id          Int        @id @default(autoincrement())
  category    String
  tags        Tag[]
}
